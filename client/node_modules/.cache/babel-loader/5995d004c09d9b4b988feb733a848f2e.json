{"ast":null,"code":"import _classCallCheck from \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elainecadman/Desktop/myHomeworks/wwclone/client/src/pages/producers.js\";\nimport React, { Component, createRef } from \"react\"; // import CheckboxSidebar from \"../components/CheckboxSidebar/CheckboxSidebar\";\n\nimport API from \"../utils/API\";\nimport { Grid, Card, Header, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport Producercard from \"../components/ProducerCard\";\nimport CountryDropdown from \"../components/CountryDropdown/countryDropdown\";\n\nvar Producers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Producers, _Component);\n\n  function Producers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Producers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Producers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.contextRef = createRef();\n    _this.state = {\n      Producers: [],\n      isLoading: true\n    };\n\n    _this.loadProducers = function () {\n      window.scrollTo(0, 0);\n      API.getProducers().then(function (res) {\n        return _this.setState({\n          Producers: res.data,\n          isLoading: false\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Producers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.scrollTo(0, 0);\n      this.loadProducers();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var champagne = this.state.Producers.filter(function (p) {\n        return p.Region === \"Champagne\";\n      });\n      var france = this.state.Producers.filter(function (p) {\n        return p.Country === \"France\" && p.Region != \"Champagne\";\n      });\n      var spain = this.state.Producers.filter(function (p) {\n        return p.Country === \"Spain\";\n      });\n      var portugal = this.state.Producers.filter(function (p) {\n        return p.Country === \"Portugal\";\n      });\n      var greece = this.state.Producers.filter(function (p) {\n        return p.Country === \"Greece\";\n      });\n      var germany = this.state.Producers.filter(function (p) {\n        return p.Country === \"Germany\";\n      });\n      var austria = this.state.Producers.filter(function (p) {\n        return p.Country === \"Austria\";\n      }); // Function sorts each country by the 'Order' Column, because it is not necessarily alphabetical.\n\n      function compare(a, b) {\n        var numA = a.Order;\n        var numB = b.Order;\n        var comparison = 0;\n\n        if (numA > numB) {\n          comparison = 1;\n        } else if (numA < numB) {\n          comparison = -1;\n        }\n\n        return comparison;\n      }\n\n      champagne = champagne.sort(compare);\n      france = france.sort(compare);\n      spain = spain.sort(compare);\n      portugal = portugal.sort(compare);\n      greece = greece.sort(compare);\n      germany = germany.sort(compare);\n      austria = austria.sort(compare);\n      return React.createElement(Grid, {\n        centered: true,\n        style: {\n          marginTop: \"40px\",\n          marginBottom: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#510409',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"40px\",\n          paddingBottom: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Our Producers\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 11,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: '1.1em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"We seek wines of character from people we like and places which are not always well-known or popular. We are not averse to the classics, but we are not scared of the obscure. Our wines do not have to meet any ideological litmus test, but we do have to like them. If they are grown organically it does not hurt, but we don\\u2019t insist on it. While we have a number of sought-after and expensive wines in our portfolio, our animating force is the acquisition of great wines that almost anyone can afford to drink \\u2013 a rather more exacting discipline than the converse. Above all, we like people. Our growers tend to be interesting and often amusing people, sometimes with a spiritual bent, sometimes unrepentantly earthy. We have watched with pleasure as the sons and daughters we knew as babies and children have grown up to be the proprietors of their parents\\u2019 estates. We like to think of ourselves as the link between these friends and the people drinking their wines in restaurants or at home.\")))), React.createElement(CountryDropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Grid.Row, {\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), this.state.isLoading ? React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Loading... \")) : React.createElement(Grid, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        id: \"france\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"France\"))), React.createElement(Grid.Row, {\n        id: \"champagne\",\n        style: {\n          backgroundColor: '#efedf2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          backgroundColor: '#efedf2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#efedf2',\n          textAlign: 'center',\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"(Champagne)\"))), React.createElement(Grid.Row, {\n        style: {\n          backgroundColor: '#efedf2',\n          paddingBottom: '35px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        style: {\n          backgroundColor: '#efedf2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, champagne.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, champagne.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          textAlign: 'center',\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"France\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, france.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, france.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        id: \"spain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Spain\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, spain.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, spain.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        id: \"portugal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Portugal\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, portugal.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, portugal.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        id: \"greece\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Greece\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, greece.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, greece.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        id: \"germany\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Germany\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, germany.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, germany.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\"))), React.createElement(Grid.Row, {\n        id: \"austria\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"right\",\n        style: {\n          color: '#221244',\n          backgroundColor: '#f2efef',\n          textAlign: 'center',\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Austria\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, austria.length ? React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, austria.map(function (producer) {\n        return React.createElement(Producercard, {\n          id: producer.Producer,\n          producer: producer.Producer,\n          country: producer.Country,\n          subregion: producer.Subregion,\n          region: producer.Region,\n          key: producer._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        });\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \" \\\"No results to display\\\"\")))));\n    }\n  }]);\n\n  return Producers;\n}(Component);\n\nexport default Producers;","map":{"version":3,"sources":["/Users/elainecadman/Desktop/myHomeworks/wwclone/client/src/pages/producers.js"],"names":["React","Component","createRef","API","Grid","Card","Header","Segment","Dimmer","Loader","Producercard","CountryDropdown","Producers","contextRef","state","isLoading","loadProducers","window","scrollTo","getProducers","then","res","setState","data","catch","err","console","log","champagne","filter","p","Region","france","Country","spain","portugal","greece","germany","austria","compare","a","b","numA","Order","numB","comparison","sort","marginTop","marginBottom","color","backgroundColor","textAlign","paddingTop","paddingBottom","fontSize","length","map","producer","Producer","Subregion","_id"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\n// import CheckboxSidebar from \"../components/CheckboxSidebar/CheckboxSidebar\";\nimport API from \"../utils/API\";\nimport { Grid, Card, Header, Segment, Dimmer, Loader } from \"semantic-ui-react\";\nimport Producercard from \"../components/ProducerCard\";\nimport CountryDropdown from \"../components/CountryDropdown/countryDropdown\";\n\n\nclass Producers extends Component {\n\ncontextRef = createRef()\n\n    state = {\n      Producers: [],\n      isLoading: true\n    };\n  \n    componentDidMount() {\n      window.scrollTo(0, 0)\n      this.loadProducers();\n    }\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n    loadProducers = () => {\n\n      window.scrollTo(0,0);\n      API.getProducers()\n      .then(res => \n        this.setState({Producers: res.data, isLoading: false})\n        )\n        .catch(err => console.log(err));\n    }\n\n  \nrender() {\n  let champagne = this.state.Producers.filter(p => p.Region === \"Champagne\");\n let france = this.state.Producers.filter(p => (p.Country === \"France\" && p.Region != \"Champagne\"));\n let spain = this.state.Producers.filter(p => p.Country === \"Spain\");\n let portugal = this.state.Producers.filter(p => p.Country === \"Portugal\");\n let greece = this.state.Producers.filter(p => p.Country === \"Greece\");\n let germany = this.state.Producers.filter(p => p.Country === \"Germany\");\n let austria = this.state.Producers.filter(p => p.Country === \"Austria\");\n\n // Function sorts each country by the 'Order' Column, because it is not necessarily alphabetical.\n function compare(a,b){\n   const numA = a.Order;\n   const numB = b.Order;\n\n   let comparison = 0;\n   if(numA > numB){\n     comparison = 1;\n   } else if (numA < numB){\n     comparison = -1\n   }\n   return comparison\n }\n champagne = champagne.sort(compare);\n france = france.sort(compare);\n spain = spain.sort(compare);\n portugal = portugal.sort(compare);\n greece = greece.sort(compare);\n germany = germany.sort(compare);\n austria = austria.sort(compare);\n\n \n\n\n\n    return (\n        <Grid centered style={{marginTop: \"40px\", marginBottom: \"40px\"}}>\n\n        <Grid.Row>\n      <Grid.Column>\n        <Header as='h1' textAlign='right' style={{color: '#510409', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"40px\", paddingBottom: \"40px\"}} >\n      Our Producers\n    </Header>\n    </Grid.Column>\n        </Grid.Row>\n\n    <Grid.Row>\n      <Grid.Column width={11}>\n    <center>\n      <p style={{fontSize: '1.1em'}}>\n      We seek wines of character from people we like and places which are not always well-known or popular. We are not averse to the classics, but we are not scared of the obscure. Our wines do not have to meet any ideological litmus test, but we do have to like them. If they are grown organically it does not hurt, but we don’t insist on it. While we have a number of sought-after and expensive wines in our portfolio, our animating force is the acquisition of great wines that almost anyone can afford to drink – a rather more exacting discipline than the converse. Above all, we like people. Our growers tend to be interesting and often amusing people, sometimes with a spiritual bent, sometimes unrepentantly earthy. We have watched with pleasure as the sons and daughters we knew as babies and children have grown up to be the proprietors of their parents’ estates. We like to think of ourselves as the link between these friends and the people drinking their wines in restaurants or at home.\n      </p>\n              {/* <SearchProducers /> */}\n            </center>\n            </Grid.Column> \n    </Grid.Row>\n\n      <CountryDropdown />\n      \n    <Grid.Row style={{marginTop: '20px'}}>\n  \n    </Grid.Row>\n\n{this.state.isLoading ?\n  <Dimmer active inverted>\n  <Loader inverted>Loading... </Loader>\n</Dimmer>\n: (\n  <Grid centered>\n\n\n\n{/* FRANCE */}\n<Grid.Row id='france'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      France\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n            {/* Champange */}\n            <Grid.Row id='champagne' style={{backgroundColor:'#efedf2'}}>\n  <Grid.Column style={{backgroundColor:'#efedf2'}}>\n<Header as='h2' textAlign='right' style={{color: '#221244', backgroundColor: '#efedf2', textAlign: 'center', paddingTop: \"10px\", paddingBottom: \"10px\"}} >\n      (Champagne)\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row style={{backgroundColor:'#efedf2', paddingBottom: '35px'}}>\n\n<Grid.Column width={12} style={{backgroundColor:'#efedf2'}}>\n        {champagne.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {champagne.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n            <Grid.Row >\n  <Grid.Column >\n<Header as='h2' textAlign='right' style={{color: '#221244', textAlign: 'center', paddingTop: \"10px\", paddingBottom: \"10px\"}} >\n      France\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n<Grid.Column width={12}>\n        {france.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {france.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n\n\n{/* SPAIN */}\n<Grid.Row id='spain'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      Spain\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n\n<Grid.Column width={12}>\n        {spain.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {spain.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n\n{/* PORTUGAL */}\n<Grid.Row id='portugal'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      Portugal\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n\n<Grid.Column width={12}>\n        {portugal.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {portugal.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n{/* GREECE */}\n<Grid.Row id='greece'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      Greece\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n\n<Grid.Column width={12}>\n        {greece.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {greece.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n{/* Germany */}\n<Grid.Row id='germany'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      Germany\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n\n<Grid.Column width={12}>\n        {germany.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {germany.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n\n            {/* AUSTRIA */}\n<Grid.Row id='austria'>\n  <Grid.Column>\n<Header as='h1' textAlign='right' style={{color: '#221244', backgroundColor: '#f2efef', textAlign: 'center', paddingTop: \"20px\", paddingBottom: \"20px\"}} >\n      Austria\n    </Header>\n    </Grid.Column>\n</Grid.Row>\n\n    <Grid.Row>\n\n<Grid.Column width={12}>\n        {austria.length ? (\n          \n            <Card.Group itemsPerRow={4}>\n          {austria.map(producer => (\n              <Producercard id={producer.Producer} producer={producer.Producer} country={producer.Country} subregion={producer.Subregion} region={producer.Region} key={producer._id}/>            \n          ))}\n        </Card.Group>\n            ) : (\n              <h3> \"No results to display\"</h3>\n            )}\n            </Grid.Column>\n          \n            </Grid.Row>\n            </Grid>\n)}\n\n     </Grid>\n    );\n  }\n}\n\nexport default Producers;\n\n"]},"metadata":{},"sourceType":"module"}