{"ast":null,"code":"import _classCallCheck from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/pages/producers.js\";\n// import React, { Component, createRef } from \"react\";\n// // import CheckboxSidebar from \"../components/CheckboxSidebar/CheckboxSidebar\";\n// import API from \"../utils/API\";\n// import { List } from \"../components/List\";\n// import { Grid, Card, Sticky, Rail, Ref } from \"semantic-ui-react\";\n// import Producercard from \"../components/ProducerCard\"\n// import SearchProducers from \"../components/SearchProducers\"\n// import { createReadStream } from \"fs\";\n// import { createRequireFromPath } from \"module\";\n// class Producers extends Component {\n// contextRef = createRef()\n//     state = {\n//       Producers: [], \n//       isLoading: false\n//     };\n//     componentDidMount() {\n//       this.loadProducers();\n//     }\n//   loadProducers = () => {\n//     this.setState({\n//       isLoading: true\n//     })\n//     API.getProducers()\n//       .then(res => {\n//         //The World's least efficient way of alphabetizing an array of objects\n//         let idArray=[];\n//         res.data.map( producer => {idArray.push(producer.Producer)})\n//         idArray.sort()\n//         let alphabeticalProducers = []\n//         idArray.map( id => {\n//           alphabeticalProducers.push( res.data.find( (producer)=>{ return producer.Producer === id } ))\n//         })\n//         this.setState({ Producers: alphabeticalProducers })\n//       }\n//       )\n//       .catch(err => console.log(err));\n//   };\n// render() {\n//     return (\n//         <Grid style={{marginTop: \"50px\", marginBottom: \"30px\"}}>\n//           {/* <Grid.Row> */}\n//             <Grid.Column width={3}>\n//             <Ref innerRef={this.contextRef}>\n//             <Rail>\n//             <center>\n//             <Sticky style={{marginTop: \"30px\"}}>\n//               <SearchProducers />\n//               </Sticky>\n//             </center>\n//             </Rail>\n//             </Ref>\n//             </Grid.Column>\n//           {/* </Grid.Row>  \n//           <Grid.Row centered columns=\"1\"> */}\n// <Grid.Column width={12}>\n//         {this.state.Producers.length ? (\n//             <Card.Group itemsPerRow={4}>\n//           {this.state.Producers.map(producer => (\n//               <Producercard id={producer._id} producer={producer.Producer} country={producer.Country} region={producer.Region} key={producer._id}/>            \n//           ))}\n//         </Card.Group>\n//             ) : (\n//               <h3>{this.state.isLoading ? \"loading...\": \"No results to display\"}</h3>\n//             )}\n//             </Grid.Column>\n//             {/* </Grid.Row> */}\n//      </Grid>\n//     );\n//   }\n// }\n// export default Producers;\nimport _ from 'lodash';\nimport React, { Component, createRef } from 'react';\nimport { Grid, Header, Image, Rail, Ref, Segment, Sticky } from 'semantic-ui-react';\n\nvar Placeholder = function Placeholder() {\n  return React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/wireframe/paragraph.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  });\n};\n\nvar StickyExampleAdjacentContext =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StickyExampleAdjacentContext, _Component);\n\n  function StickyExampleAdjacentContext() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StickyExampleAdjacentContext);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StickyExampleAdjacentContext)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.contextRef = createRef();\n    return _this;\n  }\n\n  _createClass(StickyExampleAdjacentContext, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        centered: true,\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Ref, {\n        innerRef: this.contextRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, _.times(10, function (i) {\n        return React.createElement(Placeholder, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      }), React.createElement(Rail, {\n        position: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, _.times(3, function (i) {\n        return React.createElement(Placeholder, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }), React.createElement(Sticky, {\n        context: this.contextRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Stuck Content\"), React.createElement(Image, {\n        src: \"https://react.semantic-ui.com/images/wireframe/image.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(Rail, {\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Sticky, {\n        context: this.contextRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Stuck Content\"), React.createElement(Image, {\n        src: \"https://react.semantic-ui.com/images/wireframe/image.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return StickyExampleAdjacentContext;\n}(Component);\n\nexport { StickyExampleAdjacentContext as default };","map":{"version":3,"sources":["/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/pages/producers.js"],"names":["_","React","Component","createRef","Grid","Header","Image","Rail","Ref","Segment","Sticky","Placeholder","StickyExampleAdjacentContext","contextRef","times","i"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SACEC,IADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,OANF,EAOEC,MAPF,QAQO,mBARP;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,8DAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAApB;;IAEqBC,4B;;;;;;;;;;;;;;;;;UACnBC,U,GAAaV,SAAS,E;;;;;;6BAEb;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,KAAKU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,CAAC,CAACc,KAAF,CAAQ,EAAR,EAAY,UAAAC,CAAC;AAAA,eACZ,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,OAAb,CADH,EAKE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,CAAC,CAACc,KAAF,CAAQ,CAAR,EAAW,UAAAC,CAAC;AAAA,eACX,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA,OAAZ,CADH,EAKE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,0DAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CALF,EAgBE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,0DAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAhBF,CADF,CADF,CADF,CADF;AA+BD;;;;EAnCuDX,S;;SAArCU,4B","sourcesContent":["// import React, { Component, createRef } from \"react\";\n// // import CheckboxSidebar from \"../components/CheckboxSidebar/CheckboxSidebar\";\n// import API from \"../utils/API\";\n// import { List } from \"../components/List\";\n// import { Grid, Card, Sticky, Rail, Ref } from \"semantic-ui-react\";\n// import Producercard from \"../components/ProducerCard\"\n// import SearchProducers from \"../components/SearchProducers\"\n// import { createReadStream } from \"fs\";\n// import { createRequireFromPath } from \"module\";\n\n// class Producers extends Component {\n\n// contextRef = createRef()\n\n//     state = {\n//       Producers: [], \n//       isLoading: false\n//     };\n  \n//     componentDidMount() {\n//       this.loadProducers();\n//     }\n  \n//   loadProducers = () => {\n//     this.setState({\n//       isLoading: true\n//     })\n//     API.getProducers()\n//       .then(res => {\n//         //The World's least efficient way of alphabetizing an array of objects\n//         let idArray=[];\n//         res.data.map( producer => {idArray.push(producer.Producer)})\n//         idArray.sort()\n//         let alphabeticalProducers = []\n//         idArray.map( id => {\n//           alphabeticalProducers.push( res.data.find( (producer)=>{ return producer.Producer === id } ))\n//         })\n//         this.setState({ Producers: alphabeticalProducers })\n//       }\n//       )\n//       .catch(err => console.log(err));\n//   };\n  \n// render() {\n//     return (\n//         <Grid style={{marginTop: \"50px\", marginBottom: \"30px\"}}>\n//           {/* <Grid.Row> */}\n            \n//             <Grid.Column width={3}>\n//             <Ref innerRef={this.contextRef}>\n//             <Rail>\n//             <center>\n//             <Sticky style={{marginTop: \"30px\"}}>\n//               <SearchProducers />\n//               </Sticky>\n//             </center>\n//             </Rail>\n//             </Ref>\n//             </Grid.Column>\n\n//           {/* </Grid.Row>  \n//           <Grid.Row centered columns=\"1\"> */}\n// <Grid.Column width={12}>\n//         {this.state.Producers.length ? (\n          \n//             <Card.Group itemsPerRow={4}>\n//           {this.state.Producers.map(producer => (\n//               <Producercard id={producer._id} producer={producer.Producer} country={producer.Country} region={producer.Region} key={producer._id}/>            \n//           ))}\n//         </Card.Group>\n//             ) : (\n//               <h3>{this.state.isLoading ? \"loading...\": \"No results to display\"}</h3>\n//             )}\n//             </Grid.Column>\n//             {/* </Grid.Row> */}\n//      </Grid>\n//     );\n//   }\n// }\n\n// export default Producers;\n\n\n\nimport _ from 'lodash'\nimport React, { Component, createRef } from 'react'\nimport {\n  Grid,\n  Header,\n  Image,\n  Rail,\n  Ref,\n  Segment,\n  Sticky,\n} from 'semantic-ui-react'\n\nconst Placeholder = () => <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n\nexport default class StickyExampleAdjacentContext extends Component {\n  contextRef = createRef()\n\n  render() {\n    return (\n      <Grid centered columns={3}>\n        <Grid.Column>\n          <Ref innerRef={this.contextRef}>\n            <Segment>\n              {_.times(10, i => (\n                <Placeholder key={i} />\n              ))}\n\n              <Rail position='left'>\n                {_.times(3, i => (\n                  <Placeholder key={i} />\n                ))}\n\n                <Sticky context={this.contextRef}>\n                  <Header as='h3'>Stuck Content</Header>\n                  <Image src='https://react.semantic-ui.com/images/wireframe/image.png' />\n                </Sticky>\n              </Rail>\n\n              <Rail position='right'>\n                <Sticky context={this.contextRef}>\n                  <Header as='h3'>Stuck Content</Header>\n                  <Image src='https://react.semantic-ui.com/images/wireframe/image.png' />\n                </Sticky>\n              </Rail>\n            </Segment>\n          </Ref>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}