{"ast":null,"code":"import _classCallCheck from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/components/JustIn/justin.js\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Winecard from \"../WineCard/index.js\";\nimport { Grid, Header } from 'semantic-ui-react';\nimport { createCipher } from \"crypto\";\n\nvar Justin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Justin, _Component);\n\n  function Justin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Justin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Justin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      wines: []\n    };\n\n    _this.loadWines = function () {\n      API.newWines().then(function (res) {\n        _this.setState({\n          wines: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Justin, [{\n    key: \"componentDidMount\",\n    //onload we get all the wine and producer data\n    value: function componentDidMount() {\n      this.loadWines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        doubling: true,\n        columns: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Just Arrived!\")), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.wines.map(function (wine) {\n        return React.createElement(Winecard, {\n          header: wine.Wine,\n          region: wine.Region,\n          producer: wine.Producer,\n          country: wine.Country,\n          wineid: wine._id,\n          key: wine._id,\n          url: wine.URL,\n          Code: wine.Code,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Justin;\n}(Component);\n\nexport default Justin;","map":{"version":3,"sources":["/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/components/JustIn/justin.js"],"names":["React","Component","API","Winecard","Grid","Header","createCipher","Justin","state","wines","loadWines","newWines","then","res","setState","data","catch","err","console","log","textAlign","map","wine","Wine","Region","Producer","Country","_id","URL","Code"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAEEC,IAFF,EAGEC,MAHF,QAKO,mBALP;AAMA,SAASC,YAAT,QAA6B,QAA7B;;IAGMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAURC,S,GAAY,YAAM;AAChBR,MAAAA,GAAG,CAACS,QAAJ,GACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKC,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEI,GAAG,CAACE;AAAb,SAAd;AACD,OAHH,EAKGC,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OALZ;AAMD,K;;;;;;;AAdD;wCAGoB;AAElB,WAAKP,SAAL;AACD;;;6BAUQ;AACP,aAIJ,oBAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAe,QAAA,OAAO,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,KAAK,EAAE;AAACU,UAAAA,SAAS,EAAE;AAAZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CAFR,EAMM,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGe,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEA,IAAI,CAACC,IAAvB;AAA6B,UAAA,MAAM,EAAED,IAAI,CAACE,MAA1C;AAAkD,UAAA,QAAQ,EAAEF,IAAI,CAACG,QAAjE;AAA2E,UAAA,OAAO,EAAEH,IAAI,CAACI,OAAzF;AAAkG,UAAA,MAAM,EAAEJ,IAAI,CAACK,GAA/G;AAAoH,UAAA,GAAG,EAAEL,IAAI,CAACK,GAA9H;AAAmI,UAAA,GAAG,EAAEL,IAAI,CAACM,GAA7I;AAAkJ,UAAA,IAAI,EAAEN,IAAI,CAACO,IAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CAHf,CANN,CAJI;AAqBD;;;;EA1CkB5B,S;;AA6CrB,eAAeM,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Winecard from \"../WineCard/index.js\"\n\nimport {\n\n  Grid,\n  Header\n\n} from 'semantic-ui-react';\nimport { createCipher } from \"crypto\";\n\n\nclass Justin extends Component {\n  state = {\n    wines: []\n  };\n  //onload we get all the wine and producer data\n\n\n  componentDidMount() {\n    \n    this.loadWines();\n  }\n  loadWines = () => {\n    API.newWines()\n      .then(res => {\n        this.setState({ wines: res.data })\n      }\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n     \n\n\n<Grid doubling columns={4}>\n\n        <Grid.Row style={{textAlign: 'center'}}>\n        <Header as='h2'>Just Arrived!</Header>\n      </Grid.Row>\n\n      <Grid.Row>\n\n      \n                    {this.state.wines.map(wine => (\n                      <Winecard header={wine.Wine} region={wine.Region} producer={wine.Producer} country={wine.Country} wineid={wine._id} key={wine._id} url={wine.URL} Code={wine.Code} />\n                    ))}\n                  </Grid.Row>\n                  </Grid>\n\n\n    );\n  }\n}\n\nexport default Justin;"]},"metadata":{},"sourceType":"module"}