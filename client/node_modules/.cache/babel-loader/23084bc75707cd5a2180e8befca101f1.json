{"ast":null,"code":"import _classCallCheck from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/components/WineCard/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Card, Image } from 'semantic-ui-react'; // import {Moon, Female, Leaf, Sun} from '../../components/Labels/Labels'\n\nimport \"./Winecard.css\";\nvar validImage;\n\nvar Winecard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Winecard, _Component);\n\n  function Winecard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Winecard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Winecard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.imageCheck = function (codeForImage) {\n      if (\"/images/bottle/\".concat(codeForImage, \".png\") == null) {\n        validImage = false;\n      } else {\n        validImage = true;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Winecard, [{\n    key: \"render\",\n    value: function render() {\n      var codeForImage = this.props.Code;\n      imageCheck(codeForImage);\n      return React.createElement(Link, {\n        to: \"/details/\" + this.props.wineid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, validImage ? React.createElement(Image, {\n        className: \"cardImage\",\n        src: \"/images/StockRED.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }) : // Else Renders row with image from url:\n      // <Image className=\"cardImage\" src={`https://gdurl.com${this.props.url}`} />\n      // For rendering image from individual folder:\n      React.createElement(Image, {\n        className: \"cardImage\",\n        src: \"/images/bottle/\".concat(this.props.Code, \".png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        className: \"cardHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.producer, \" \", this.props.header), React.createElement(Card.Meta, {\n        className: \"cardData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.region, \", \", this.props.country)))));\n    }\n  }]);\n\n  return Winecard;\n}(Component);\n\nexport default Winecard;","map":{"version":3,"sources":["/Users/elainecadman/Desktop/myHomeworks/WineWise/client/src/components/WineCard/index.js"],"names":["React","Component","Link","Card","Image","validImage","Winecard","imageCheck","codeForImage","props","Code","wineid","textAlign","producer","header","region","country"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B,C,CACA;;AACA,OAAO,gBAAP;AAEA,IAAIC,UAAJ;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEJC,U,GAAa,UAACC,YAAD,EAAkB;AAC7B,UAAI,yBAAkBA,YAAlB,aAAwC,IAA5C,EAAiD;AAC/CH,QAAAA,UAAU,GAAG,KAAb;AACD,OAFD,MAEO;AACLA,QAAAA,UAAU,GAAG,IAAb;AACD;AACA,K;;;;;;;6BAEG;AACR,UAAIG,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAA9B;AACAH,MAAAA,UAAU,CAACC,YAAD,CAAV;AAGE,aACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAc,KAAKC,KAAL,CAAWE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIN,UAAU,GAAG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA4B,QAAA,GAAG,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAEV;AACA;AAEA;AACA,0BAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,GAAG,2BAAoB,KAAKI,KAAL,CAAWC,IAA/B,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAkBE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAE;AAACE,UAAAA,SAAS,EAAE;AAAZ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKH,KAAL,CAAWI,QAAhD,OAA2D,KAAKJ,KAAL,CAAWK,MAAtE,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKL,KAAL,CAAWM,MAAlB,QAA4B,KAAKN,KAAL,CAAWO,OAAvC,CADF,CAFF,CAlBF,CAFA,CADF;AA8BD;;;;EA7CsBf,S;;AAiDvB,eAAeK,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Card, Image } from 'semantic-ui-react'\n// import {Moon, Female, Leaf, Sun} from '../../components/Labels/Labels'\nimport \"./Winecard.css\";\n\nlet validImage;\n\nclass Winecard extends Component {\n\n  imageCheck = (codeForImage) => {\n    if( `/images/bottle/${codeForImage}.png` == null){\n      validImage = false;\n    } else {\n      validImage = true;\n    }\n    };\n\nrender(){\nlet codeForImage = this.props.Code \nimageCheck(codeForImage);\n\n\n  return(\n    <Link to={\"/details/\" + this.props.wineid} >\n  \n    <Card className=\"card\" >\n\n      { validImage ? <Image className=\"cardImage\"src='/images/StockRED.png' />\n        :\n        // Else Renders row with image from url:\n        // <Image className=\"cardImage\" src={`https://gdurl.com${this.props.url}`} />\n\n        // For rendering image from individual folder:\n        <Image className=\"cardImage\" src={`/images/bottle/${this.props.Code}.png`}/>\n      }\n {/* CORNER LABELS */}\n\n  {/* { ((this.props.farming === \"Organic\") || (this.props.farming === \"Certified Organic\" )) && <Leaf />}\n  { ((this.props.farming === \"Bio-dynamic\") || (this.props.farming === \"Certified Bio-dynamic\" )) && <Moon />}\n  { this.props.farming === \"HEV\" && <Sun />}\n  { this.props.female === \"Female Winemaker\"  && <Female />} */}\n\n\n      <Card.Content style={{textAlign: \"center\"}}>\n        <Card.Header className='cardHeader'>{this.props.producer} {this.props.header}</Card.Header>\n        <Card.Meta className='cardData'>\n          <span>{this.props.region}, {this.props.country}</span>\n        </Card.Meta>\n      </Card.Content>\n    </Card>\n    </Link> \n  )\n}\n\n \n}\nexport default Winecard\n\n\n"]},"metadata":{},"sourceType":"module"}